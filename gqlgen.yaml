# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - internal/graphql/schema/*.graphqls

# Where should the generated server code go?
exec:
  package: graphql
  filename: internal/graphql/generated.go

# Where should any generated models go?
model:
  filename: internal/graphql/models_gen.go
  package: graphql

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: internal/graphql/resolvers
  package: resolvers
  filename_template: "{name}.resolvers.go"

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "crm-api/models"

# This section declares type mapping between the GraphQL and go type systems
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  UUID:
    model:
      - github.com/99designs/gqlgen/graphql.UUID
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int32
  Int64:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
  Time:
    model:
      - github.com/99designs/gqlgen/graphql.Time
  User:
    model:
      - crm-api/models.User
  Client:
    model:
      - crm-api/models.Client
  ChatThread:
    model:
      - crm-api/models.Chat
  ChatMessage:
    model:
      - crm-api/models.Message
  Email:
    model:/models.Email
  TimelineEvent:
    model:
      - crm-api/models.TimelineEvent