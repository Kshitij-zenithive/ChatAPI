// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/google/uuid"
)

type Auth struct {
	Token        string `json:"token"`
	RefreshToken string `json:"refreshToken"`
	User         *User  `json:"user"`
}

type Client struct {
	ID        uuid.UUID        `json:"id"`
	Name      string           `json:"name"`
	Email     string           `json:"email"`
	Phone     *string          `json:"phone,omitempty"`
	Company   *string          `json:"company,omitempty"`
	Notes     *string          `json:"notes,omitempty"`
	CreatedAt time.Time        `json:"createdAt"`
	UpdatedAt time.Time        `json:"updatedAt"`
	Messages  []*Message       `json:"messages,omitempty"`
	Emails    []*Email         `json:"emails,omitempty"`
	Timeline  []*TimelineEvent `json:"timeline,omitempty"`
}

type CreateClientInput struct {
	Name    string  `json:"name"`
	Email   string  `json:"email"`
	Phone   *string `json:"phone,omitempty"`
	Company *string `json:"company,omitempty"`
	Notes   *string `json:"notes,omitempty"`
}

type CreateEmailInput struct {
	Subject     string    `json:"subject"`
	Content     string    `json:"content"`
	ClientID    uuid.UUID `json:"clientId"`
	Attachments []string  `json:"attachments,omitempty"`
}

type CreateMessageInput struct {
	Content  string      `json:"content"`
	ClientID uuid.UUID   `json:"clientId"`
	Mentions []uuid.UUID `json:"mentions,omitempty"`
}

type Email struct {
	ID          uuid.UUID `json:"id"`
	Subject     string    `json:"subject"`
	Content     string    `json:"content"`
	Sender      *User     `json:"sender"`
	Client      *Client   `json:"client"`
	Attachments []string  `json:"attachments,omitempty"`
	CreatedAt   time.Time `json:"createdAt"`
	UpdatedAt   time.Time `json:"updatedAt"`
}

type GoogleLoginInput struct {
	IDToken string `json:"idToken"`
}

type LoginInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type Message struct {
	ID        uuid.UUID `json:"id"`
	Content   string    `json:"content"`
	Sender    *User     `json:"sender"`
	Client    *Client   `json:"client"`
	Mentions  []*User   `json:"mentions,omitempty"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type Mutation struct {
}

type Query struct {
}

type RegisterInput struct {
	Name     string `json:"name"`
	Email    string `json:"email"`
	Password string `json:"password"`
}

type Subscription struct {
}

type TimelineEvent struct {
	ID            uuid.UUID `json:"id"`
	EventType     string    `json:"eventType"`
	Description   string    `json:"description"`
	Client        *Client   `json:"client"`
	User          *User     `json:"user"`
	RelatedEntity *string   `json:"relatedEntity,omitempty"`
	CreatedAt     time.Time `json:"createdAt"`
}

type UpdateClientInput struct {
	ID      uuid.UUID `json:"id"`
	Name    *string   `json:"name,omitempty"`
	Email   *string   `json:"email,omitempty"`
	Phone   *string   `json:"phone,omitempty"`
	Company *string   `json:"company,omitempty"`
	Notes   *string   `json:"notes,omitempty"`
}

type User struct {
	ID        uuid.UUID `json:"id"`
	Name      string    `json:"name"`
	Email     string    `json:"email"`
	Role      string    `json:"role"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}
